#!/bin/sh
# SPDX-license-identifier: LGPL-2.1

set -e

die() {
        echo "$(basename "${0}"):" "$@"
        exit 1
}

rundir="/run/brmgr"
etc="${rundir}/${1}"
bridge=
network=

[ -r "$etc" ] && . "$etc" || die \
        "could not read configuration file: $etc"

if ls /sys/class/net/"${bridge}"/brif/* >/dev/null 2>&1; then
	die "$bridge has attached interfaces, not shutting it down"
fi

# Tear down bridge
if [ -d /sys/class/net/"${bridge}" ]; then
	ip addr flush dev "${bridge}"
	ip link set "${bridge}" down
	ipt_lock="-w"
	iptables -w -L -n > /dev/null 2>&1 || ipt_lock=""
	# if some of the iptables commands fail that is okay,
	# we still want to delete the bridge
	{
		iptables $ipt_lock -D INPUT -i "${bridge}" -p udp --dport 67 -j ACCEPT
		iptables $ipt_lock -D INPUT -i "${bridge}" -p tcp --dport 67 -j ACCEPT
		iptables $ipt_lock -D INPUT -i "${bridge}" -p udp --dport 53 -j ACCEPT
		iptables $ipt_lock -D INPUT -i "${bridge}" -p tcp --dport 53 -j ACCEPT
		iptables $ipt_lock -D FORWARD -i "${bridge}" -j ACCEPT
		iptables $ipt_lock -D FORWARD -o "${bridge}" -j ACCEPT
		iptables $ipt_lock -t nat -D POSTROUTING -s "${network}" ! -d "${network}" \
			-j MASQUERADE || true
		iptables $ipt_lock -t mangle -D POSTROUTING -o "${bridge}" -p udp -m udp \
			--dport 68 -j CHECKSUM --checksum-fill
	} || true
	ip link delete "${bridge}"
fi
